image: docker:20.10.16

services:
  - docker:dind

stages:
  - test
  - build
  - deploy
  - notify

variables:
  TELEGRAM_API_URL: "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage"
  SUMMARY_FILE: "pipeline_summary.txt"
  DOCKER_HOST: tcp://docker:2375  # Подключение к демону Docker
  DOCKER_TLS_CERTDIR: ""  

before_script:
  - apk add --no-cache openssh-client
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

build_docker_registry_job:
  stage: build
  script:
    - docker build -f days_to_new_year/Dockerfile -t registry.gitlab.com/mastering-ci-cd/mastering-ci-cd:latest .
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push registry.gitlab.com/mastering-ci-cd/mastering-ci-cd:latest
  after_script:
    - |
      echo "Build stage: $(if [ "$CI_JOB_STATUS" == "success" ]; then echo "✅ Success"; else echo "❌ Failure"; fi)" >> $SUMMARY_FILE
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - Dockerfile
  artifacts:
    paths:
      - $SUMMARY_FILE


deploy_job:
  stage: deploy
  script:
    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST 'docker pull registry.gitlab.com/mastering-ci-cd/mastering-ci-cd:latest'
    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "sudo systemctl restart myapi"
  after_script:
    - |
      echo "Deploy stage: $(if [ "$CI_JOB_STATUS" == "success" ]; then echo "✅ Success"; else echo "❌ Failure"; fi)" >> $SUMMARY_FILE
  when: manual
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - Dockerfile
  artifacts:
    paths:
      - $SUMMARY_FILE

notify_summary:
  stage: notify
  script:
    - |
      SUMMARY=$(cat $SUMMARY_FILE)
      curl -s -X POST $TELEGRAM_API_URL \
        -d chat_id="$TELEGRAM_CHANNEL_ID" \
        -d text="Summary of pipeline for *$CI_PROJECT_NAME* on branch *$CI_COMMIT_REF_NAME*:
        $SUMMARY
        Pipeline: $CI_PIPELINE_URL" \
        -d parse_mode="Markdown"
  when: always
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - Dockerfile
  artifacts:
    paths:
      - $SUMMARY_FILE
