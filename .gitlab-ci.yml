image: docker:20.10.16

services:
  - docker:dind

stages:
  - build
  - deploy
  - monitoring
  - remediation
  - notify
  

variables:
  TELEGRAM_API_URL: "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage"
  SUMMARY_FILE: "pipeline_summary.txt"
  DOCKER_IMAGE: "arala/daystonewyear"

before_script:
  - apk add --no-cache openssh-client
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - ssh-add ~/.ssh/id_rsa
  - ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

build_docker_registry_job:
  stage: build
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin 
    - docker build -f ./task2_3/days_to_new_year/Dockerfile -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKER_IMAGE:latest
    - docker push $DOCKER_IMAGE:latest
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "success" ]; then
        echo "Build stage: ✅ Success" >> $SUMMARY_FILE
      else
        echo "Build stage: ❌ Failure" >> $SUMMARY_FILE
      fi
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - '**/Dockerfile'
  artifacts:
    paths:
      - $SUMMARY_FILE


deploy_job:
  stage: deploy
  script:
    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST 'docker pull arala/daystonewyear'
    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "sudo systemctl restart new-year"
    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "docker image prune"
  after_script:
    - |
      echo "Deploy stage: $(if [ "$CI_JOB_STATUS" == "success" ]; then echo "✅ Success"; else echo "❌ Failure"; fi)" >> $SUMMARY_FILE
  when: manual
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - '**/Dockerfile'
  artifacts:
    paths:
      - $SUMMARY_FILE

monitoring_job:
  stage: monitoring
  needs: 
    - deploy_job
  script: 
    - apk add --no-cache curl
    - HTTP_CODE=$(ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "curl -o /dev/null -s -w \"%{http_code}\" $DEPLOYED_SERVICE_URL")
    - echo "HTTP_CODE is: $HTTP_CODE" 
    - if [ "$HTTP_CODE" -eq 200 ]; then echo "Monitoring stage: ✅ Success" >> $SUMMARY_FILE; else echo "Monitoring stage: ❌ Failure" >> $SUMMARY_FILE; fi
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - '**/Dockerfile'
  artifacts:
    paths:
      - $SUMMARY_FILE


remediation_job:
  stage: remediation
  script:
    - ssh -i ~/.ssh/id_rsa $SSH_USER@$SSH_HOST "sudo systemctl restart new-year"
  when: on_failure
  needs:
    - monitoring_job
  after_script:
    - |
      echo "Remediation stage done ✅" >> $SUMMARY_FILE
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - '**/Dockerfile'
  artifacts:
    paths:
      - $SUMMARY_FILE


notify_summary:
  stage: notify
  needs: 
    - deploy_job
  script:
    - apk add --no-cache curl
    - |
      SUMMARY=$(cat $SUMMARY_FILE)
      curl -s -X POST $TELEGRAM_API_URL \
        -d chat_id="$TELEGRAM_CHANNEL_ID" \
        -d text="Summary of pipeline for *$CI_PROJECT_NAME* on branch *$CI_COMMIT_REF_NAME*:
        $SUMMARY
        Pipeline: $CI_PIPELINE_URL" \
        -d parse_mode="Markdown"
  when: always
  only:
    refs:
      - master
      - /^release-.*$/
    changes:
      - '**/*.py'
      - '**/Dockerfile'
  artifacts:
    paths:
      - $SUMMARY_FILE
